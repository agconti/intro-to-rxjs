{"version":3,"sources":["main.js"],"names":[],"mappings":"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","file":"all.js","sourcesContent":["// Utils\n\nfunction appendResults(val, resultsDiv){\n var results = document.getElementById(resultsDiv)\n results.innerHTML += val\n}\n\n\n// Consuimg an observable\nlet source = Rx.Observable.interval(125)\n\nsource\n  .filter(x => x % 2 === 0)\n  .map(x => '.')\n  .subscribe(x => appendResults(x, 'results'))\n\n\n\n// Hot vs Cold Observables\nlet cold = Rx.Observable.interval(500)\n\ncold.subscribe(x => appendResults(x, 'cold1'))\n\nsetTimeout(function(){\n  cold.subscribe(x => appendResults(x, 'cold2'))\n}, 1500)\n\n\nlet hot = Rx.Observable.interval(500).publish().refCount()\n\nhot.subscribe(x => appendResults(x, 'hot1'))\n\nsetTimeout(function(){\n  hot.subscribe(x => appendResults(x, 'hot2'))\n}, 1500)\n\n\n\n\n// Creating observables\nlet myObservable = Rx.Observable.create((observer) => {\n\n      let number = Math.random() * 100\n      try{\n        if (number > 100 ){\n          throw new Error('RandomIsBroken')\n        }\n      } catch(err){\n        observer.onError(err)\n      }\n\n      observer.onNext(number)\n      observer.onCompleted()\n\n  // disposal function\n  return x => console.log('myObservable has been disposed.')\n})\n\nmyObservable\n  .subscribe( results => appendResults(results, 'rando')\n            , err => document.getElementById('rando-error').checked = true\n            , () => document.getElementById('rando-success').checked = true\n            )\n\n\n\n// Consuming apis\n let weatherObservable = Rx.Observable.create((observer) => {\n    jQuery.getJSON('http://api.openweathermap.org/data/2.5/weather?q=NewYork,us')\n    .done((response) => { observer.onNext(response) })\n    .fail((jqXHR, status, error) => { observer.onError(error) })\n    .always(() =>{ observer.onCompleted() })\n  })\n\n weatherObservable.subscribe(result => appendResults(result.weather[0].description, 'weather'))\n\n\n let flightDelayObservable = Rx.Observable.create((observer) => {\n    jQuery.getJSON('http://services.faa.gov/airport/status/JFK?format=json')\n    .done((response) => { observer.onNext(response) })\n    .fail((jqXHR, status, error) => { observer.onError(error) })\n    .always(() =>{ observer.onCompleted() })\n  })\n\n flightDelayObservable\n    // only get delays\n   .filter(flight => flight.delay === 'true')\n   .subscribe(delays => appendResults(`${delays.status.type}: ${delays.status.reason}`, 'flights'))\n\n\n\n // Disposing observables\n let toBeDisposedObservable = Rx.Observable.create((observer) => {\n   let id = setTimeout(() => {\n     observer.onNext(42)\n     observer.onComplete()\n   }, 1000)\n\n   // Disposal function\n   return () => clearTimeout(id)\n })\n\n\ntoBeDisposedObservable\n  .subscribe(x => appendResults(x, 'not-disposed'))\n\n// Dispose the observable before we can consume it\ntoBeDisposedObservable.dispose()\ntoBeDisposedObservable\n  .subscribe(x => appendResults(x, 'disposed'))\n"],"sourceRoot":"/source/"}